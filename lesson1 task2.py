"""
2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6. Выполнить над числом 5 побитовый сдвиг вправо и влево
на два знака. Объяснить полученный результат.
"""

print('Бинарное И (and) "&"', f'\nрезультат: {5 & 6}', f'\n8bit: {5 & 6:08b}\n')
'''
Оператор "&" копирует в результат совпадения битов операндов, 
       битовая 5 (8bit) - 00000101
       битовая 6 (8bit) - 00000110
результат до вычислений - 00000000 (для наглядности)
        результат после - 00000100, что в десятичном представлении 4
'''

print('Бинарное ИЛИ (or) "|"', f'\nрезультат: {5 | 6}', f'\n8bit: {5 | 6:08b}\n')
'''
Оператор "|" копирует в результат бит, если он присутствует в одном из операндов, 
битовая 5 (8bit) - 00000101
битовая 6 (8bit) - 00000110
       результат - 00000111, что в десятичном представлении 7
'''

print('Бинарное ИЛИ НЕТ (xor) "^"', f'\nрезультат: {5 ^ 6}', f'\n8bit: {5 ^ 6:08b}\n')
'''
Оператор "^" копирует в результат бит, если он присутствует в одном из операндов, но не в обоих сразу
битовая 5 (8bit) - 00000101
битовая 6 (8bit) - 00000110
       результат - 00000011, что в десятичном представлении 3
'''

print('Инвертирующий оператор "~"', f'\nрезультат: {~5, ~6}\n')
'''
Оператор "~" в результате меняет бит на обратный (1 на 0 и наоборот 0 на 1), работает с одним операндом
битовая 5 (8bit) - 00000101
       результат - 11111010 (дополнительный код), что в десятичном представлении -6
битовая 6 (8bit) - 00000110
       результат - 11111001, что в десятичном представлении -7
'''

print('Бинарный сдвиг влево "<<" на 2 бита', f'\nрезультат: {5 << 2}', f'\n8bit: {5 << 2:08b}\n')
'''
Сдвигает значение левого операнда на позицию, которая указана справа, т.е. сдвинет значение на две позиции влево
битовая 5 (8bit) - 00000101
       результат - 00010100, что в десятичном представлении 20
'''

print('Бинарный сдвиг вправо ">>" на 2 бита', f'\nрезультат: {5 >> 2}', f'\n8bit: {5 >> 2:08b}')
'''
Сдвигает значение левого операнда на позицию, которая указана справа, т.е. сдвинет значение на две позиции вправо
битовая 5 (8bit) - 00000101
       результат - 00000001, что в десятичном представлении 1
'''
